from unittest.mock import patch
from weapon_profile import Weapon
from rolls.hit_roll import hit_roll


@patch("rolls.dice_roll.random.randint")
def test_hit_roll(mock_randint):
    inputs = [
        {
            "weapon": Weapon(
                name="test_weapon_skill_success",
                num_attacks=2,
                skill=3,
                strength=4,
                armorPen=0,
                damage=1,
                count=10,
                lethal_hits=False,
                sustained_hits=0,
                devastating_wounds=False,
                torrent=False,
                blast=False,
                twin_linked=False,
                hit_reroll_values=[],
                wound_reroll_values=[],
                damage_reroll_values=[],
                critical_hit_value=6,
                critical_wound_value=6,
            ),
            "roll_result": 3,
            "num_attacks": 20,
            "expected": [20, 0],
        },
        {
            "weapon": Weapon(
                name="test_weapon_skill_failure",
                num_attacks=2,
                skill=3,
                strength=4,
                armorPen=0,
                damage=1,
                count=10,
                lethal_hits=False,
                sustained_hits=0,
                devastating_wounds=False,
                torrent=False,
                blast=False,
                twin_linked=False,
                hit_reroll_values=[],
                wound_reroll_values=[],
                damage_reroll_values=[],
                critical_hit_value=6,
                critical_wound_value=6,
            ),
            "roll_result": 2,
            "num_attacks": 20,
            "expected": [0, 0],
        },
        {
            "weapon": Weapon(
                name="test_weapon_skill_4_torrent",
                num_attacks=2,
                skill=7,
                strength=4,
                armorPen=0,
                damage=1,
                count=10,
                lethal_hits=False,
                sustained_hits=0,
                devastating_wounds=False,
                torrent=True,
                blast=False,
                twin_linked=False,
                hit_reroll_values=[],
                wound_reroll_values=[],
                damage_reroll_values=[],
                critical_hit_value=6,
                critical_wound_value=6,
            ),
            "roll_result": 1,
            "num_attacks": 15,
            "expected": [15, 0],
        },
        {
            "weapon": Weapon(
                name="test_weapon_lethal_hits_crit_3",
                num_attacks=2,
                skill=4,
                strength=4,
                armorPen=0,
                damage=1,
                count=10,
                lethal_hits=True,
                sustained_hits=0,
                devastating_wounds=False,
                torrent=False,
                blast=False,
                twin_linked=False,
                hit_reroll_values=[],
                wound_reroll_values=[],
                damage_reroll_values=[],
                critical_hit_value=3,
                critical_wound_value=6,
            ),
            "roll_result": 3,
            "num_attacks": 15,
            "expected": [0, 15],
        },
        {
            "weapon": Weapon(
                name="test_weapon_skill_lethal_hits_crit_with_torrent",
                num_attacks=2,
                skill=4,
                strength=4,
                armorPen=0,
                damage=1,
                count=10,
                lethal_hits=True,
                sustained_hits=0,
                devastating_wounds=False,
                torrent=True,
                blast=False,
                twin_linked=False,
                hit_reroll_values=[],
                wound_reroll_values=[],
                damage_reroll_values=[],
                critical_hit_value=3,
                critical_wound_value=6,
            ),
            "roll_result": 3,
            "num_attacks": 12,
            "expected": [12, 0],
        },
        {
            "weapon": Weapon(
                name="test_weapon_sustained_hits_d3_crit_3",
                num_attacks=2,
                skill=3,
                strength=4,
                armorPen=0,
                damage=1,
                count=10,
                lethal_hits=False,
                sustained_hits="d3",
                devastating_wounds=False,
                torrent=False,
                blast=False,
                twin_linked=False,
                hit_reroll_values=[],
                wound_reroll_values=[],
                damage_reroll_values=[],
                critical_hit_value=3,
                critical_wound_value=6,
            ),
            "roll_result": 3,
            "num_attacks": 2,
            "expected": [8, 0],
        },
        {
            "weapon": Weapon(
                name="test_weapon_sustained_and_lethal",
                num_attacks=2,
                skill=3,
                strength=4,
                armorPen=0,
                damage=1,
                count=10,
                lethal_hits=True,
                sustained_hits=3,
                devastating_wounds=False,
                torrent=False,
                blast=False,
                twin_linked=False,
                hit_reroll_values=[],
                wound_reroll_values=[],
                damage_reroll_values=[],
                critical_hit_value=3,
                critical_wound_value=6,
            ),
            "roll_result": 3,
            "num_attacks": 2,
            "expected": [6, 2],
        },
    ]

    results = []
    for input in inputs:
        mock_randint.return_value = input["roll_result"]
        results.append(
            [
                hit_roll(input["weapon"], input["num_attacks"]),
                input["expected"],
            ]
        )

    for [result, expected] in results:
        assert [result.hits, result.lethal_hits] == expected
